 пошарюсь в
  virtual String resolvePath(const String& filename, const String& cur_path);
  virtual String getCompiledFilename(const String& resolved_filename);
может это лучше идея.
[1:00:05 PM] Евгений: интеграция с внешними данными сделана примерно также как в lua, есть базовые функции
  void * pushUserdata(int crc, int data_size, OS_UserdataDtor dtor = NULL, void * user_param = NULL);
  void * pushUserdata(int data_size, OS_UserdataDtor dtor = NULL, void * user_param = NULL);
  void * pushUserPointer(int crc, void * data, OS_UserdataDtor dtor = NULL, void * user_param = NULL);
  void * pushUserPointer(void * data, OS_UserdataDtor dtor = NULL, void * user_param = NULL);

попробуйте разобраться с нимиЮ все остальное - это более удобное их использование


[1:00:47 PM] Евгений: и это
void * toUserdata(int crc, int offs = -1, int prototype_crc = 0);

[1:02:21 PM] Евгений: можно посмотреть расширение os-datetime, там используется проталкивание внешних данных в скрипт, а именно нового объекта DateTime



[8:54:06 AM] Denis Ivanov: привет. у тебя есть оптимизации для умножения матриц на х86? спасибо.
[9:41:05 AM] Alexandr Feoktistov: Привет! Вроде бы компилятор сам должен сообразить, где использовать расширение, но я не уверен. 
Знаю, что sse/simd арифметика лежит в хидере immintrin.h
[9:41:23 AM] Alexandr Feoktistov: вот что нашел http://stackoverflow.com/questions/18499971/efficient-4x4-matrix-multiplication-c-vs-assembly
[9:42:43 AM] Alexandr Feoktistov: там интересны первые 2 ответа



